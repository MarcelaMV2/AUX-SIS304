USE REPUESTOS;
-- 1.P.A. que calcule y devuelva en parámetro de salida el costo total de una compra realizada 
-- para un repuesto específico, conociendo el nombre del repuesto y el nombre del proveedor.
DELIMITER $$
CREATE PROCEDURE PS1(IN NR VARCHAR(50), IN NP VARCHAR(50), OUT CTC FLOAT(6,2))
BEGIN
DECLARE COD CHAR(6);
DECLARE NITP CHAR(10);
IF EXISTS (SELECT * FROM PROVEEDOR WHERE NOMBREP=NP) THEN
IF EXISTS (SELECT * FROM REPUESTO WHERE DESCRIPCION= NR)THEN
SELECT CODIGO INTO COD FROM REPUESTO WHERE DESCRIPCION = NR;
SELECT NIT INTO NITP FROM PROVEEDOR WHERE NOMBREP=NP;
SELECT (COSTO-DESCUENTO+IMPUESTO) INTO CTC
FROM COMPRA 
WHERE NIT= NITP AND CODIGO = COD
LIMIT 1;
ELSE SELECT 'REPUESTO NO REGISTRADO' AS MENSAJE; END IF;
ELSE SELECT 'PROVEEDOR NO REGISTRADO' AS MENSAJE; END IF;
END $$
DELIMITER ;
SELECT * FROM REPUESTO;
CALL PS1('AMORTIGUADOR','JUAN PABLO RUIZ',@CTC);
SELECT @CTC AS 'COSTO TOTAL';

-- 2.P.A. que devuelva en parámetro de salida la cantidad total entregada de un repuesto, 
-- conociendo el nombre del mismo.
DELIMITER $$
CREATE PROCEDURE PS2(IN DR VARCHAR(50), OUT CTE INT(6))
BEGIN 
IF EXISTS (SELECT * FROM REPUESTO WHERE DESCRIPCION = DR)THEN
SELECT SUM(E.CANTIDADE) INTO CTE
FROM ENTREGA E INNER JOIN REPUESTO R ON E.CODIGO=R.CODIGO
WHERE R.DESCRIPCION = DR;
ELSE SELECT 'REPUESTO NO REGISTRADO' AS MENSAJE; END IF;
END $$
DELIMITER ;
CALL PS2('BUJIA',@CTE);
SELECT @CTE AS 'CANTIDAD TOTAL ENTREGADA';
-- 3.P.A. que devuelva en parámetros de salida la descripción y el costo del repuesto más caro 
-- comprado hasta la fecha (el primero que encuentre).
DELIMITER $$
CREATE PROCEDURE PS3(OUT DR VARCHAR(50), OUT CT FLOAT(6,2))
BEGIN
SELECT R.DESCRIPCION, C.COSTO INTO DR,CT FROM
REPUESTO R INNER JOIN COMPRA C ON R.CODIGO=C.CODIGO
ORDER BY C.COSTO DESC
LIMIT 1;
END $$
DELIMITER ;
CALL PS3(@DR, @CT);
SELECT @DR AS 'RESPUESTO', @CT AS 'COSTO';

-- 4. P.A. que devuelva en parámetro de salida la cantidad total de repuestos comprados en un 
-- rango de fechas introducido por parámetros de entrada.
DELIMITER $$
CREATE PROCEDURE PS4(IN F1 DATE, IN F2 DATE, OUT CTRC INT)
BEGIN
DECLARE AUX DATE;
IF(F1>F2) THEN
SET AUX = F1;
SET F1 = F2;
SET F2 = AUX;
END IF;
SELECT SUM(CANTIDAD) INTO CTRC
FROM COMPRA 
WHERE DATE(FECHA) BETWEEN F1 AND F2;
END $$
DELIMITER ;
CALL PS4('2019-02-15','2025-10-07',@CTRC);
SELECT @CTRC AS 'CANTIDAD TOTAL DE REPUESTOS COMPRADOS';
SELECT * FROM COMPRA;

-- 5.P.A. que calcule y devuelva en parámetros de salida el total de repuestos comprados y el 
-- gasto total de un proveedor en un año específico, conociendo el nombre del proveedor.
DELIMITER $$
CREATE PROCEDURE PS5(IN ANIO INT(4), IN NP VARCHAR(50), OUT TRC INT, OUT GTC FLOAT(6,2))
BEGIN
DECLARE NITP CHAR(10);
IF EXISTS (SELECT * FROM PROVEEDOR WHERE NOMBREP=NP) THEN
SET NITP = (SELECT NIT FROM PROVEEDOR WHERE NOMBREP=NP);
SELECT SUM(CANTIDAD), SUM(COSTO-DESCUENTO+IMPUESTO) INTO TRC, GTC
FROM COMPRA 
WHERE NIT=NITP AND YEAR(FECHA)=ANIO;
ELSE SELECT 'PROVEEDOR NO REGISTRADO' AS MENSAJE; END IF;
END $$
DELIMITER ;
CALL PS5(2019, 'JUAN PABLO RUIZ', @TRC, @GTC);
SELECT @TRC AS 'CANTIDAD TOTAL', @GTC AS 'GASTO TOTAL';
-- 6. P.A. que devuelva en parámetros de salida el promedio y la cantidad máxima de repuestos 
-- entregados por un encargado determinado, conociendo su nombre.
DELIMITER $$
CREATE PROCEDURE PS6(IN NOE VARCHAR(50), OUT PCE FLOAT(6,2), OUT MRE INT)
BEGIN
DECLARE IE INT(6);
IF EXISTS (SELECT * FROM ENCARGADO WHERE NOMBRE=NOE) THEN
SET IE = (SELECT ITEM FROM ENCARGADO WHERE NOMBRE=NOE);
SELECT AVG(CANTIDADE), MAX(CANTIDADE) INTO PCE, MRE
FROM ENTREGA 
WHERE ITEM = IE;
ELSE SELECT 'ENCARGADO NO REGISTRADO' AS MENSAJE; END IF;
END $$
DELIMITER ;
CALL PS6('VICTOR CASTEDO', @PCE, @MRE);
SELECT @PCE AS 'PROMEDIO', @MRE AS 'CANTIDAD MAXIMA';
SELECT * FROM ENTREGA;
UPDATE ENTREGA SET CANTIDADE=5 WHERE NE=101;
-- 7.P.A. que devuelva en parámetros de salida el repuesto más entregado en dos meses 
-- específicos del año en curso.
DELIMITER $$
CREATE PROCEDURE PS7(IN M1 INT, IN M2 INT, OUT DR VARCHAR(50), OUT RME INT)
BEGIN
DECLARE AUX INT;
IF (M1>M2)THEN
SET AUX=M1;
SET M1=M2;
SET M2=AUX;
END IF;
SELECT R.DESCRIPCION, SUM(E.CANTIDADE) INTO DR, RME
FROM REPUESTO R INNER JOIN ENTREGA E ON R.CODIGO=R.CODIGO
WHERE MONTH(FECHAE) BETWEEN M1 AND M2 AND YEAR(FECHAE)=YEAR(CURDATE())
GROUP BY R.DESCRIPCION
ORDER BY SUM(E.CANTIDADE) DESC
LIMIT 1;
END $$
DELIMITER ;
CALL PS7(2,10, @DR, @RME);
SELECT @DR AS 'REPUESTO MAS ENTREGADO', @RME AS 'CANTIDAD TOTAL ENTREGADA';
-- 8.P.A. que determine y devuelva en parámetro de salida el porcentaje de participación de 
-- un repuesto en las compras de un proveedor específico.
DELIMITER $$
CREATE PROCEDURE PS8(IN DR VARCHAR(50), IN NP VARCHAR(50), OUT PPR FLOAT(6,2))
BEGIN
DECLARE COD CHAR(6);
DECLARE NITP CHAR(10);
DECLARE CP INT; 
DECLARE CR  INT;
IF EXISTS(SELECT * FROM REPUESTO WHERE DESCRIPCION=DR)THEN
IF EXISTS(SELECT * FROM PROVEEDOR WHERE NOMBREP=NP) THEN
SELECT CODIGO INTO COD FROM REPUESTO WHERE DESCRIPCION=DR;
SELECT NIT INTO NITP FROM PROVEEDOR WHERE NOMBREP=NP;

SELECT SUM(CANTIDAD) INTO CP FROM COMPRA
WHERE NIT=NITP;

SELECT SUM(CANTIDAD) INTO CR FROM COMPRA
WHERE NIT=NITP AND CODIGO= COD;
SET PPR = (CR*100)/CP;

ELSE SELECT 'PROVEEDOR NO REGISTRADO' AS MENSAJE; END IF;
ELSE SELECT 'REPEUSTO NO REGISTRADO' AS MENSAJE; END IF;
END $$
DELIMITER ;
CALL PS8('AMORTIGUADOR','CARLA',@PPR);
SELECT @PPR AS 'PORCENTAJE REPUESTO DEL PROVEEDOR';
SELECT * FROM COMPRA;
